openapi: "3.0.0"
info:
  version: 1.0.0
  title: MincePieRank
servers:
  - url: https://mincepierank.co.uk/
paths:
  /:
    get:
      summary: Home Page
      operationId: homePage
      tags:
        - public
      responses:
        "200":
          description: home page
          content:
            text/html:
              schema:
                type: string
        default:
          $ref: "#/components/responses/UnexpectedError"
  /about:
    get:
      operationId: aboutPage
      tags:
        - public
      responses:
        "200":
          description: home page
          content:
            text/html:
              schema:
                type: string
        default:
          $ref: "#/components/responses/UnexpectedError"
  /about/cookies:
    get:
      operationId: cookiePage
      tags:
        - public
      responses:
        "200":
          description: cookie page
          content:
            text/html:
              schema:
                type: string
        default:
          $ref: "#/components/responses/UnexpectedError"
  /about/privacy:
    get:
      operationId: privacyPage
      tags:
        - public
      responses:
        "200":
          description: privacy page
          content:
            text/html:
              schema:
                type: string
        default:
          $ref: "#/components/responses/UnexpectedError"
  /years:
    get:
      operationId: yearsPage
      tags:
        - public
      responses:
        "200":
          description: years page
          content:
            text/html:
              schema:
                type: string
        default:
          $ref: "#/components/responses/UnexpectedError"
  /years/{year}:
    parameters:
      - $ref: "#/components/parameters/Year"
    get:
      operationId: yearPage
      tags:
        - public
      responses:
        "200":
          description: year page
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /years/{year}/all-pies:
    parameters:
      - $ref: "#/components/parameters/Year"
      - $ref: "#/components/parameters/Page"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/CategoriesFilter"
    get:
      operationId: yearAllPies
      tags:
        - public
      responses:
        "200":
          description: year all pies
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /years/{year}/categories:
    parameters:
      - $ref: "#/components/parameters/Year"
    get:
      operationId: yearAllCategories
      tags:
        - public
      responses:
        "200":
          description: year all categories
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /years/{year}/categories/{category}:
    parameters:
      - $ref: "#/components/parameters/Year"
      - name: category
        in: path
        required: true
        schema:
          type: string
      - $ref: "#/components/parameters/Page"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/CategoriesFilter"
    get:
      operationId: yearCategoryPies
      tags:
        - public
      responses:
        "200":
          description: year all categories
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /years/{year}/brands:
    parameters:
      - $ref: "#/components/parameters/Year"
    get:
      operationId: yearAllBrands
      tags:
        - public
      responses:
        "200":
          description: year all brands
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /years/{year}/brands/{brand}:
    parameters:
      - $ref: "#/components/parameters/Year"
      - $ref: "#/components/parameters/Brand"
      - $ref: "#/components/parameters/Page"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/CategoriesFilter"
    get:
      operationId: yearBrandPies
      tags:
        - public
      responses:
        "200":
          description: year all brands
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /years/{year}/brands/{brand}/{pie}:
    parameters:
      - $ref: "#/components/parameters/Year"
      - $ref: "#/components/parameters/Brand"
      - name: pie
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: yearBrandPie
      tags:
        - public
      responses:
        "200":
          description: year all brands
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /profile/rankings/{year}:
    parameters:
      - $ref: "#/components/parameters/Year"
      - $ref: "#/components/parameters/Page"
      - $ref: "#/components/parameters/Limit"
      - $ref: "#/components/parameters/CategoriesFilter"
    get:
      operationId: yearPersonalRanking
      tags:
        - personal
      responses:
        "200":
          description: User's individual rankings
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /admin:
    get:
      operationId: getAdminIndex
      tags:
        - admin
      responses:
        "200":
          description: Admin index
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /admin/config:
    get:
      operationId: getAdminConfig
      tags:
        - admin
      responses:
        "200":
          description: Admin index
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
    post:
      operationId: createAdminConfig
      tags:
        - admin
      requestBody:
        description: Create Body
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - key
                - value
              properties:
                key:
                  type: string
                value:
                  type: string
      responses:
        "200":
          description: Admin config
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /admin/config/{key}:
    delete:
      operationId: deleteAdminConfig
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      tags:
        - admin
      responses:
        "200":
          description: Admin config
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
    put:
      operationId: updateAdminConfig
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      tags:
        - admin
      requestBody:
        description: Update Body
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - value
              properties:
                value:
                  type: string
      responses:
        "200":
          description: Admin config
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /admin/makerpies:
    get:
      operationId: getMakerPiesAdmin
      tags:
        - admin
      responses:
        "200":
          description: Admin index
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
    post:
      operationId: createMakerPieAdmin
      tags:
        - admin
      requestBody:
        description: Create Body
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - year
                - makerid
                - id
                - displayname
                - fresh
                - labels
                - imageFile
                - webLink
                - packCount
                - packPriceInPence
                - validated
              properties:
                year:
                  type: number
                  x-go-type: int32
                makerid:
                  type: string
                id:
                  type: string
                displayname:
                  type: string
                fresh:
                  type: boolean
                labels:
                  type: string
                imageFile:
                  type: string
                  format: binary
                webLink:
                  type: string
                packCount:
                  type: number
                  x-go-type: int32
                packPriceInPence:
                  type: number
                  x-go-type: int32
                validated:
                  type: boolean
      responses:
        "200":
          description: Admin config
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /admin/makerpies/{oid}:
    get:
      operationId: getMakerPieAdmin
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: string
      tags:
        - admin
      responses:
        "200":
          description: Admin config
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
    delete:
      operationId: deleteMakerPie
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: string
      tags:
        - admin
      responses:
        "200":
          description: Admin config
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
    put:
      operationId: updateMakerPie
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: string
      tags:
        - admin
      requestBody:
        description: Update Body
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - displayname
                - fresh
                - labels
                - webLink
                - packCount
                - packPriceInPence
                - categories
                - validated
              properties:
                displayname:
                  type: string
                fresh:
                  type: boolean
                labels:
                  type: string
                imageFile:
                  type: string
                  format: binary
                webLink:
                  type: string
                categories:
                  type: array
                  items: 
                    type: string
                packCount:
                  type: number
                  x-go-type: int32
                packPriceInPence:
                  type: number
                  x-go-type: int32
                validated:
                  type: boolean
      responses:
        "200":
          description: Admin config
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        default:
          $ref: "#/components/responses/UnexpectedError"
components:
  parameters:
    Year:
      name: year
      in: path
      required: true
      schema:
        type: integer
        format: int64
    Brand:
      name: brand
      in: path
      required: true
      schema:
        type: string
    Page:
      name: page
      in: query
      required: false
      schema:
        default: 1
        type: integer
        format: int64
    Limit:
      name: limit
      in: query
      required: false
      schema:
        default: 20
        type: integer
        format: int64
    CategoriesFilter:
      name: categories
      description: Categories to filter pies on
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
  responses:
    NotFound:
      description: not found
      content:
        text/html:
          schema:
            type: string
    UnexpectedError:
      description: unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
